{"version":3,"sources":["pages/Map/index.tsx","store/defaultAction.ts","constants/server.ts","store/defaultApi.ts","components/molecules/TabBar/index.tsx","store/item/api.ts","store/item/actions.ts","components/atoms/SearchToggler/index.tsx"],"names":["mapDispatchToProps","getItems","itemActions","connect","state","places","itemReducer","props","useState","didMount","setDidMount","useEffect","mapState","center","zoom","link","title","modules","style","width","height","zIndex","options","suppressMapOpenBlock","data","map","n","geometry","location","defaultProperties","balloonContentBody","name","price","defaultAction","dispatch","getState","responseType","callbacks","type","action","started","apiCall","then","response","status","text","value","responseObject","success","onSuccess","JSON","parse","val","failed","onError","message","errorMessage","error","API_URL","modifyHeader","headers","Accept","Token","sessionStorage","getItem","token","stdApiPOST","fetch","url","method","body","stringify","stdApiGET","stdApiPUT","TabBar","className","to","activeClassName","icon","faHome","color","faMapMarked","faPlusSquare","faHistory","faUserCircle","id","itemsUrl","createOfferUrl","GET_ITEMS","list","description","createOffer","CREATE_OFFER","api","window","replace","user_token","console","log","Error","SearchToggler","faFilter"],"mappings":"yLAiGA,IAMMA,EAAqB,CACzBC,SAAUC,IAAYD,UAGTE,uBAVS,SAACC,GACvB,MAAQ,CACNC,OAAQD,EAAME,YAAYD,UAQUL,EAAzBG,EAnGf,SAAiBI,GAA6B,IACpCF,EAAqBE,EAArBF,OAAQJ,EAAaM,EAAbN,SAD2B,EAGXO,oBAAS,GAHE,mBAGpCC,EAHoC,KAG1BC,EAH0B,KAK3CC,qBAAU,WACHF,IACHC,GAAY,GACZT,GAAYA,OAGhB,CAACQ,EAAUR,IAGX,IAAMW,EAAW,CAAEC,OAAO,eAZN,CAAC,UAAW,YAYeC,KAAM,IAUrD,OAAQ,oCACJ,kBAAC,IAAD,CAAeC,KAAK,IAAIC,MAAM,gDAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,QAXQ,CACjB,wBACA,0BACA,uBACA,0BACA,uBAM8Bb,MAAOQ,EAAUM,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,OAAQ,GAC1FC,QAAS,CACPC,sBAAsB,IAGvBlB,GAAUA,EAAOmB,KAAKC,KAAI,SAACC,GAAD,OACzB,kBAAC,IAAD,CACEC,SAAUD,EAAEE,SACZC,kBAAmB,CAEjBC,mBAAmB,0BAAD,OACXJ,EAAEK,KADS,cACCL,EAAEM,MADH,kDAEXN,EAAEE,SAFS,kCAgD9B,kBAAC,IAAD,W,8EC7FSK,EAAgB,SAACC,EAAeC,EAAgBb,EAAcc,GACzE,IAAMC,EAAYf,EAAQe,WAAa,GACvCH,EAAS,CAAEI,KAAMhB,EAAQiB,OAAOC,UAChClB,EAAQmB,UACDC,MACG,SAACC,GACC,OAAQA,EAASC,QACf,KAAK,IACL,KAAK,IACHD,EACGE,OACAH,MACC,SAACI,GACC,GAAIV,EAAc,CAChB,IAAMW,EAAc,gCAA4BD,GAChDZ,EAAS,aACPI,KAAMhB,EAAQiB,OAAOS,SAClB1B,EAAQ2B,UAAUF,KAEnBV,EAAUY,WACZZ,EAAUY,UAAU3B,EAAQ2B,UAAUF,QAEnC,CACL,IAAMA,EAAiBG,KAAKC,MAAML,GAClCZ,EAAS,aACPI,KAAMhB,EAAQiB,OAAOS,SAClB1B,EAAQ2B,UAAUF,KAEnBV,EAAUY,WACZZ,EAAUY,UAAU3B,EAAQ2B,UAAUF,QAKhD,MACF,KAAK,IACHJ,EACGE,OACAH,MACG,SAACI,GACCZ,EAAS,aACPI,KAAMhB,EAAQiB,OAAOS,SAClB1B,EAAQ2B,WAAU,KAEnBZ,EAAUY,WACZZ,EAAUY,UAAU3B,EAAQ2B,WAAU,OAIhD,MACF,KAAK,IACHN,EACGE,OACAH,MAAK,SAACU,GACLlB,EAAS,aACPI,KAAMhB,EAAQiB,OAAOc,QAClB/B,EAAQgC,QAAQ,CAAEC,QAAS,mDAGpC,MACF,KAAK,IACHZ,EACGE,OACAH,MAAK,SAACU,GACLlB,EAAS,aACPI,KAAMhB,EAAQiB,OAAOc,QAClB/B,EAAQgC,QAAQ,CAAEC,QAAS,qBAGpC,MACF,QACErB,EAAS,CACPI,KAAMhB,EAAQiB,OAAOc,OACrBG,aAAa,yCAAD,OAAab,EAASC,cAI1C,SAACa,GACCvB,EAAS,aACPI,KAAMhB,EAAQiB,OAAOc,OACrBG,aAAc,uHACXlC,EAAQgC,QAAQ,CAAEC,QAAS,uB,gCCjF9C,sCACaG,EAGT,8B,kJCJEC,EAAe,SAACrC,GACpB,IAAMsC,EAAO,eAAQ,CACnBC,OAAQ,gEACRC,MAAM,GAAD,OAAKC,eAAeC,QAAQ,UACjC,eAAgB,qBAOlB,OAJM1C,EAAQ2C,QACZL,EAAO,MAAP,iBAA6BtC,EAAQ2C,QAGhCL,GAGIM,EAAa,SAAC5C,GACzB,OACE6C,MACE7C,EAAQ8C,IACR,CACEC,OAAQ,OACRT,QAASD,EAAarC,GACtBgD,KAAMpB,KAAKqB,UAAUjD,EAAQE,MAAQ,OAMhCgD,EAAY,SAAClD,GACxB,OACE6C,MACE7C,EAAQ8C,IACR,CACEC,OAAQ,MACRT,QAASD,EAAarC,MAMjBmD,EAAY,SAACnD,GACxB,OACEA,EAAQE,KACR2C,MACE7C,EAAQ8C,IACR,CACEC,OAAQ,MACRT,QAASD,EAAarC,GACtBgD,KAAMpB,KAAKqB,UAAUjD,EAAQE,MAAQ,MAIzC2C,MACE7C,EAAQ8C,IACR,CACEC,OAAQ,MACRT,QAASD,EAAarC,O,gCCvD9B,yCAsDeoD,IAhDf,WACE,OACE,uBAAKC,UAAU,+EACb,gBAAC,IAAD,CAASC,GAAG,IAAIC,gBAAgB,iDAC9B,uBAAKF,UAAU,sCACb,gBAAC,IAAD,CAAiBA,UAAU,+BAA+BG,KAAMC,IAAQC,MAAM,KAC9E,yEAKJ,gBAAC,IAAD,CAASJ,GAAG,OAAOC,gBAAgB,2CACjC,uBAAKF,UAAU,sCACb,gBAAC,IAAD,CAAiBA,UAAU,0BAA0BG,KAAMG,IAAaD,MAAM,KAC9E,6DAKJ,gBAAC,IAAD,CAASJ,GAAG,SAASC,gBAAgB,2CACnC,uBAAKF,UAAU,sCACb,gBAAC,IAAD,CAAiBA,UAAU,+BAA+BG,KAAMI,IAAcF,MAAM,YACpF,qBAAGL,UAAU,wBAAb,gDAKJ,gBAAC,IAAD,CAASC,GAAG,SAASC,gBAAgB,2CACnC,uBAAKF,UAAU,sCACb,gBAAC,IAAD,CAAiBA,UAAU,+BAA+BG,KAAMK,IAAWH,MAAM,KACjF,yEAKJ,gBAAC,IAAD,CAASJ,GAAG,WAAWC,gBAAgB,2CACrC,uBAAKF,UAAU,sCACb,gBAAC,IAAD,CAAiBA,UAAU,+BAA+BG,KAAMM,IAAcJ,MAAM,KACpF,4E,iFCzCJK,EAAKtB,eAAeC,QAAQ,UAE5BsB,EAAQ,UAAM5B,IAAN,aACR6B,EAAc,UAAM7B,IAAN,wBAA6B2B,EAA7B,U,QC2BN,KACZpF,SA9BsB,SAACoC,GAAD,OAAqB,SAACH,EAAeC,GAC3DF,YAAcC,EAAUC,EAAU,CAChCE,YACAE,OAAQiD,IACR/C,QAAS,WACP,ODAJ+B,YAAU,CAAEJ,IAAI,GAAD,OAAKkB,MCElBrC,UAAW,SAACN,GAAD,MAAoB,CAAE8C,KAAM9C,IACvCW,QAAS,SAACX,GAAD,MAAoB,CAAEa,aAAcb,EAAS+C,kBAuBxDC,YAnByB,SAACnE,EAAWa,GAAZ,OAAgC,SAACH,EAAgBC,GAC1EF,YAAcC,EAAUC,EAAU,CAChCE,YACAE,OAAQqD,IACRnD,QAAS,WAAQ,ODRM,SAACjB,GAAD,OACzB0C,YAAW,CAAE1C,OAAM4C,IAAI,GAAD,OAAKmB,KCODM,CAAgBrE,IACxCyB,UAAW,SAACN,GAEV,OADAmD,OAAOlE,SAASmE,QAAQ,KACjB,CAAEC,WAAYrD,EAASmB,QAEhCR,QAAS,SAACX,GAGR,OAFAsD,QAAQC,IAAI,eACO,wBAAnBvD,EAASwD,OAAmCL,OAAOlE,SAASmE,QAAQ,UAC7D,CAAEC,WAAYrD,EAASwD,c,gCC5BpC,yCAgCeC,IAvBf,SAAuB7F,GAAmC,IAChDQ,EAAgBR,EAAhBQ,KAAMC,EAAUT,EAAVS,MACd,OACE,uBAAK2D,UAAU,iCACb,uBAAKA,UAAU,qDACb,uBAAKA,UAAU,gDACb,gBAAC,IAAD,CAASA,UAAU,iCAAiCC,GAAI7D,GACtD,qBAAG4D,UAAU,UACV3D,KAIP,uBAAK2D,UAAU,2BACb,qBAAGA,UAAU,UAAb,6CAEI,gBAAC,IAAD,CAAiBA,UAAU,OAAOK,MAAM,UAAUF,KAAMuB,Y","file":"static/js/7.5f9c3153.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport itemActions from 'src/store/item/actions';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport SearchToggler from 'src/components/atoms/SearchToggler';\nimport TabBar from 'src/components/molecules/TabBar';\nimport { MapPageTypes } from './types';\n\nfunction MapPage(props: MapPageTypes.IProps) {\n  const { places, getItems } = props;\n  const coordinates = [50.322687, 57.131267];\n  const [didMount, setDidMount] = useState(false);\n\n  useEffect(() => {\n    if (!didMount) {\n      setDidMount(true);\n      getItems && getItems();\n    }\n  },\n  [didMount, getItems],\n  );\n\n  const mapState = { center: { ...coordinates }, zoom: 11 };\n\n  const mapModules = [\n    'templateLayoutFactory',\n    'layout.ImageWithContent',\n    'geoObject.addon.hint',\n    'geoObject.addon.balloon',\n    'control.ZoomControl',\n  ];\n\n  return (<>\n      <SearchToggler link=\"/\" title=\"К списку\" />\n      <YMaps>\n        <Map modules={mapModules} state={mapState} style={{ width: '100%', height: '100vh', zIndex: 9 }}\n          options={{\n            suppressMapOpenBlock: true,\n          }}\n        >\n          {places && places.data.map((n: any) =>\n            <Placemark\n              geometry={n.location}\n              defaultProperties={{\n                // hintContent: n.name,\n                balloonContentBody: `\n                  <b>${n.name} | ${n.price} ₸</b><br/>\n                  <i>${n.location}</i>\n                `,\n              }}\n            />,\n          )}\n          {/* <Placemark\n            geometry={coordinates}\n            // properties={{\n              // hintContent: address || 'Location',\n            // }}\n          /> */}\n          {/* <Placemark\n            geometry={coordinate2}\n            defaultProperties={{\n              balloonContentBody: `\n                                        <b>${'TITLE'}</b><br/>\n                                        <i>${'ADDRESS'}</i>\n                                      `,\n            }}\n            properties={{\n              balloonContentBody: `\n                <a href=/fitness/${'ID'}>\n                </a><br />\n                <a href=/fitness/${'ID'}>\n                    <h4 class=\"font-weight-bold text-dark\">${'TITLE'}</h4>\n                </a>\n                <p class=\"section-map__balloon-text\">${'ADDRESS'}</p>\n                <p class=\"section-map__balloon-text\">${'BODY'}</p>\n                <a class=\"d-flex align-items-center\" href=/fitness/${'ID'}>\n                  <h4 class=\"section-map__fitness-link pt-1 mr-1\">Перейти к залу</h4>\n                  <i class=\"text-primary fas fa-chevron-down fa-rotate-270\"></i>\n                </a>\n              `,\n            }} \n            options={{\n              iconLayout: 'default#image',\n              iconImageHref: 'images/icons/placemark.svg',\n              iconImageSize: [36, 36],\n              iconImageOffset: [-18, -36],\n              // hasHint: true,\n              // hasBaloon: true,\n            }}\n          />\n          */}\n        </Map>\n      </YMaps>\n    <TabBar />\n  </>);\n}\n\nconst mapStateToProps = (state: any) => {\n  return ({\n    places: state.itemReducer.places,\n  });\n};\n\nconst mapDispatchToProps = {\n  getItems: itemActions.getItems,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapPage);\n","export const defaultAction = (dispatch: any, getState: any , options: any, responseType?: string) => {\n  const callbacks = options.callbacks || {};\n  dispatch({ type: options.action.started });\n  options.apiCall()\n        .then(\n            (response: any) => {\n              switch (response.status) {\n                case 200:\n                case 201:\n                  response\n                    .text()\n                    .then(\n                      (value: any) => {\n                        if (responseType) {\n                          const responseObject = `data:image/png;base64,${value}`;\n                          dispatch({\n                            type: options.action.success,\n                            ...options.onSuccess(responseObject),\n                          });\n                          if (callbacks.onSuccess) {\n                            callbacks.onSuccess(options.onSuccess(responseObject));\n                          }\n                        } else {\n                          const responseObject = JSON.parse(value);\n                          dispatch({\n                            type: options.action.success,\n                            ...options.onSuccess(responseObject),\n                          });\n                          if (callbacks.onSuccess) {\n                            callbacks.onSuccess(options.onSuccess(responseObject));\n                          }\n                        }\n                      },\n                    );\n                  break;\n                case 230:\n                  response\n                    .text()\n                    .then(\n                        (value: any) => {\n                          dispatch({\n                            type: options.action.success,\n                            ...options.onSuccess(true),\n                          });\n                          if (callbacks.onSuccess) {\n                            callbacks.onSuccess(options.onSuccess(true));\n                          }\n                        },\n                    );\n                  break;\n                case 500:\n                  response\n                    .text()\n                    .then((val: any) => {\n                      dispatch({\n                        type: options.action.failed,\n                        ...options.onError({ message: 'ошибка 500!' }),\n                      });\n                    });\n                  break;\n                case 504:\n                  response\n                    .text()\n                    .then((val: any) => {\n                      dispatch({\n                        type: options.action.failed,\n                        ...options.onError({ message: 'serverError' }),\n                      });\n                    });\n                  break;\n                default:\n                  dispatch({\n                    type: options.action.failed,\n                    errorMessage: `Ошибка #${response.status}`,\n                  });\n              }\n            },\n            (error: any) => {\n              dispatch({\n                type: options.action.failed,\n                errorMessage: 'Проверьте соединение',\n                ...options.onError({ message: 'serverError' }),\n              });\n            },\n        );\n};\n","const env = process.env.NODE_ENV;\nexport const API_URL = (\n  env === 'production' ?\n    // prod\n    'http://185.22.67.118:8080/'\n  : env === 'development' ?\n    // dev\n    'http://185.22.67.118:8080/'\n  :\n    // local\n    'http://185.22.67.118:8080/'\n);\n","const modifyHeader = (options: any) => {\n  const headers = { ...{\n    Accept: 'application/json, application/xml, text/plain, text/html, *.*',\n    Token: `${sessionStorage.getItem('token')}`,\n    'Content-Type': 'application/json',\n  } };\n\n  if (!!options.token) {\n    headers['Token'] = `Bearer ${options.token}`;\n  }\n\n  return headers;\n};\n\nexport const stdApiPOST = (options: any) => {\n  return (\n    fetch(\n      options.url,\n      {\n        method: 'POST',\n        headers: modifyHeader(options),\n        body: JSON.stringify(options.data || {}),\n      },\n    )\n  );\n};\n\nexport const stdApiGET = (options: any) => {\n  return (\n    fetch(\n      options.url,\n      {\n        method: 'GET',\n        headers: modifyHeader(options),\n      },\n    )\n  );\n};\n\nexport const stdApiPUT = (options: any) => {\n  return (\n    options.data ?\n    fetch(\n      options.url,\n      {\n        method: 'PUT',\n        headers: modifyHeader(options),\n        body: JSON.stringify(options.data || {}),\n      },\n    )\n    :\n    fetch(\n      options.url,\n      {\n        method: 'PUT',\n        headers: modifyHeader(options),\n      },\n    )\n  );\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faMapMarked, faPlusSquare, faHistory, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './index.scss';\n\nfunction TabBar() {\n  return(\n    <div className=\"container tabbar d-flex flex-row justify-content-between pt-12 pb-20 fill_w\">\n      <NavLink to=\"/\" activeClassName=\"tabbar__activeLink text-decoration-none ml-14\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-6 pb-4\" icon={faHome} color=\"\" />\n          <p>\n            Главная\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/map\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon pb-4\" icon={faMapMarked} color=\"\" />\n          <p>\n            Карта\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/offer\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-8 pb-4\" icon={faPlusSquare} color=\"#00BBFF\" />\n          <p className=\"tabbar__item--center\">\n            Создать\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/login\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-8 pb-4\" icon={faHistory} color=\"\" />\n          <p>\n            История\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/cabinet\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-8 pb-4\" icon={faUserCircle} color=\"\" />\n          <p>\n            Кабинет\n          </p>\n        </div>\n      </NavLink>\n\n    </div>\n  )\n}\n\nexport default TabBar;\n","import { API_URL } from 'src/constants/server';\nimport { stdApiGET, stdApiPOST } from 'src/store/defaultApi';\n\nconst id = sessionStorage.getItem('userId');\n\nconst itemsUrl = `${API_URL}api/offer`;\nconst createOfferUrl = `${API_URL}api/producer/${id}/offer`;\n\nexport const getItems = () => (\n  stdApiGET({ url: `${itemsUrl}` })\n);\n\nexport const createOffer = (data: any) => (\n  stdApiPOST({ data, url: `${createOfferUrl}` })\n);\n","import { defaultAction } from 'src/store/defaultAction';\nimport * as api from 'src/store/item/api';\nimport { GET_ITEMS, CREATE_OFFER } from 'src/store/item/types';\n\nexport const getItems = (callbacks?: any) => (dispatch: any, getState: any) => {\n  defaultAction(dispatch, getState, {\n    callbacks,\n    action: GET_ITEMS,\n    apiCall: () => {\n      return api.getItems();\n    },\n    onSuccess: (response: any) => ({ list: response }),\n    onError: (response: any) => ({ errorMessage: response.description }),\n  });\n};\n\nexport const createOffer = (data: any, callbacks?: any) => (dispatch?: any, getState?: any) => {\n  defaultAction(dispatch, getState, {\n    callbacks,\n    action: CREATE_OFFER,\n    apiCall: () => { return api.createOffer(data); },\n    onSuccess: (response: any) => {\n      window.location.replace('/');\n      return { user_token: response.Token };\n    },\n    onError: (response: any) => {\n      console.log('token-error');\n      response.Error === \"Couldn't find token\" && window.location.replace('/login');\n      return { user_token: response.Error };\n    },\n  });\n};\n\nexport default{\n  getItems,\n  createOffer,\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\n\nimport './index.scss';\nimport { SearchTogglerTypes } from './types';\n\nfunction SearchToggler(props: SearchTogglerTypes.IProps) {\n  const { link, title } = props;\n  return (\n    <div className=\"search-toggler container mb-8\">\n      <div className=\"d-flex flex-row justify-content-between text-main\">\n        <div className=\"search-toggler__item p-12 fill_w text-center\">\n          <NavLink className=\"text-main text-decoration-none\" to={link}>\n            <p className=\"fill_w\">\n              {title}\n            </p>\n          </NavLink>\n        </div>\n        <div className=\"p-12 fill_w text-center\">\n          <p className=\"fill_w\">\n            Фильтры\n              <FontAwesomeIcon className=\"ml-8\" color=\"#888888\" icon={faFilter} />\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchToggler;\n"],"sourceRoot":""}