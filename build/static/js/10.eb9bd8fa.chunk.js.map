{"version":3,"sources":["components/molecules/YandexMap/index.tsx","pages/Offer/index.tsx","store/defaultAction.ts","constants/server.ts","store/defaultApi.ts","components/molecules/TabBar/index.tsx","store/item/api.ts","store/item/actions.ts"],"names":["YandexMap","useState","coords","setCoords","mapState","center","zoom","onClick","event","get","sessionStorage","setItem","JSON","stringify","state","style","width","height","zIndex","options","suppressMapOpenBlock","geometry","mapDispatchToProps","onCreateOffer","itemsActions","createOffer","connect","login","props","token","getItem","error","setError","useReducer","newState","foodName","price","initialQuantity","location","userInput","setUserInput","getLocation","useEffect","window","replace","handleChange","e","name","target","newValue","value","className","required","type","placeholder","onChange","preventDefault","food_name","parseInt","initial_quantity","parse","onError","TabBar","defaultAction","dispatch","getState","responseType","callbacks","action","started","apiCall","then","response","status","text","responseObject","success","onSuccess","val","failed","message","errorMessage","API_URL","modifyHeader","headers","Accept","Token","stdApiPOST","fetch","url","method","body","data","stdApiGET","stdApiPUT","to","activeClassName","icon","faHome","color","faMapMarked","faPlusSquare","faHistory","faUserCircle","id","itemsUrl","createOfferUrl","getItems","GET_ITEMS","list","description","CREATE_OFFER","api","user_token","console","log","Error"],"mappings":"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","file":"static/js/10.eb9bd8fa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { YMaps, Map, Placemark, FullscreenControl } from 'react-yandex-maps';\n\nfunction YandexMap() {\n  const [coords, setCoords] = useState(null);\n  const coordinates = [50.29760216600768, 57.16326105902972];\n  const mapState = { center: { ...coordinates }, zoom: 11 };\n\n  const onMapClick = (event: any) => {\n    setCoords(event.get('coords'));\n    sessionStorage.setItem('location', JSON.stringify(coords));\n  };\n\n  return (\n    <YMaps>\n      <Map onClick={onMapClick} state={mapState} style={{ width: '100%', height: '10vh', zIndex: 9 }}\n        options={{\n          suppressMapOpenBlock: true,\n        }}\n      >\n        <Placemark\n          geometry={coords || [50.322687, 57.131267]}\n        />\n        <FullscreenControl />\n      </Map>\n    </YMaps>\n  );\n}\nexport default YandexMap;\n","import React, { useState, useEffect, useReducer } from 'react';\nimport { connect } from 'react-redux';\nimport itemsActions from 'src/store/item/actions';\n\nimport TabBar from 'src/components/molecules/TabBar';\nimport YandexMap from 'src/components/molecules/YandexMap';\n\nimport { OfferPageTypes } from './types';\nimport './index.scss';\n\nfunction CreateOffer(props: OfferPageTypes.IProps) {\n  const token = sessionStorage.getItem('token');\n  const [error, setError] = useState(false);\n  const [userInput, setUserInput] = useReducer(\n    (state: any, newState: any) => ({ ...state, ...newState }),\n    {\n      foodName: '',\n      price: null,\n      initialQuantity: null,\n      location: '',\n    },\n  );\n  const getLocation = sessionStorage.getItem('location') || '';\n  useEffect(() => {\n    if (token === null) {\n      window.location.replace('/login');\n    }\n  });\n  const { onCreateOffer } = props;\n\n  const handleChange = (e: any) => {\n    const { name } = e.target;\n    const newValue = e.target.value;\n    setUserInput({ [name]: newValue });\n  };\n\n  const submitForm = (e: any) => {\n    e.preventDefault();\n    onCreateOffer && onCreateOffer(\n      {\n        food_name: userInput.foodName,\n        price: parseInt(userInput.price),\n        initial_quantity: parseInt(userInput.initialQuantity),\n        location: JSON.parse(getLocation),\n      },\n      {\n        onError: () => (setError(true)),\n      },\n    );\n  };\n\n  return (\n    <div>\n      <h1 className=\"main-logo text-center f-32\">As Bolsyn</h1>\n      <div className=\"row align-items-center justify-content-center mt-180\">\n        <div className=\"create-offer container\">\n          <div className=\"text-left\">\n            <p className=\"container my-20 f-14\">Предложите своё блюдо :)</p>\n          </div>\n\n          <div className=\"d-flex flex-column container \">\n            <input required type=\"text\"\n              className=\"container create-offer__input my-8\"\n              placeholder=\"Введите название блюда\"\n              name=\"foodName\" value={userInput.foodName} onChange={handleChange}\n            />\n            <input required type=\"number\"\n              className=\"container create-offer__input my-8\"\n              placeholder=\"Цена\"\n              name=\"price\" value={userInput.price} onChange={handleChange}\n            />\n\n            <input required type=\"number\"\n              className=\"container create-offer__input my-8\"\n              placeholder=\"Кол-во\"\n              name=\"initialQuantity\" value={userInput.initialQuantity} onChange={handleChange}\n            />\n            <p className=\"mt-8 mb-4 f-14 text-grey\">Адрес</p>\n            <YandexMap />\n            <button onClick={submitForm}\n              className=\"container create-offer__submit mt-16 mb-40\" type=\"submit\">Создать\n            </button>\n            {error &&\n              <div className=\"text-left text-danger\">\n                <p className=\"container px-36 mb-16 f-14\">Неверный логин или пароль</p>\n              </div>\n            }\n          </div>\n        </div>\n        <TabBar />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => {\n  return ({\n    login: state.login,\n  });\n};\n\nconst mapDispatchToProps = {\n  onCreateOffer: itemsActions.createOffer,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOffer);\n","export const defaultAction = (dispatch: any, getState: any , options: any, responseType?: string) => {\n  const callbacks = options.callbacks || {};\n  dispatch({ type: options.action.started });\n  options.apiCall()\n        .then(\n            (response: any) => {\n              switch (response.status) {\n                case 200:\n                case 201:\n                  response\n                    .text()\n                    .then(\n                      (value: any) => {\n                        if (responseType) {\n                          const responseObject = `data:image/png;base64,${value}`;\n                          dispatch({\n                            type: options.action.success,\n                            ...options.onSuccess(responseObject),\n                          });\n                          if (callbacks.onSuccess) {\n                            callbacks.onSuccess(options.onSuccess(responseObject));\n                          }\n                        } else {\n                          const responseObject = JSON.parse(value);\n                          dispatch({\n                            type: options.action.success,\n                            ...options.onSuccess(responseObject),\n                          });\n                          if (callbacks.onSuccess) {\n                            callbacks.onSuccess(options.onSuccess(responseObject));\n                          }\n                        }\n                      },\n                    );\n                  break;\n                case 230:\n                  response\n                    .text()\n                    .then(\n                        (value: any) => {\n                          dispatch({\n                            type: options.action.success,\n                            ...options.onSuccess(true),\n                          });\n                          if (callbacks.onSuccess) {\n                            callbacks.onSuccess(options.onSuccess(true));\n                          }\n                        },\n                    );\n                  break;\n                case 500:\n                  response\n                    .text()\n                    .then((val: any) => {\n                      dispatch({\n                        type: options.action.failed,\n                        ...options.onError({ message: 'ошибка 500!' }),\n                      });\n                    });\n                  break;\n                case 504:\n                  response\n                    .text()\n                    .then((val: any) => {\n                      dispatch({\n                        type: options.action.failed,\n                        ...options.onError({ message: 'serverError' }),\n                      });\n                    });\n                  break;\n                default:\n                  dispatch({\n                    type: options.action.failed,\n                    errorMessage: `Ошибка #${response.status}`,\n                  });\n              }\n            },\n            (error: any) => {\n              dispatch({\n                type: options.action.failed,\n                errorMessage: 'Проверьте соединение',\n                ...options.onError({ message: 'serverError' }),\n              });\n            },\n        );\n};\n","const env = process.env.NODE_ENV;\nexport const API_URL = (\n  env === 'production' ?\n    // prod\n    'http://185.22.67.118:8080/'\n  : env === 'development' ?\n    // dev\n    'http://185.22.67.118:8080/'\n  :\n    // local\n    'http://185.22.67.118:8080/'\n);\n","const modifyHeader = (options: any) => {\n  const headers = { ...{\n    Accept: 'application/json, application/xml, text/plain, text/html, *.*',\n    Token: `${sessionStorage.getItem('token')}`,\n    'Content-Type': 'application/json',\n  } };\n\n  if (!!options.token) {\n    headers['Token'] = `Bearer ${options.token}`;\n  }\n\n  return headers;\n};\n\nexport const stdApiPOST = (options: any) => {\n  return (\n    fetch(\n      options.url,\n      {\n        method: 'POST',\n        headers: modifyHeader(options),\n        body: JSON.stringify(options.data || {}),\n      },\n    )\n  );\n};\n\nexport const stdApiGET = (options: any) => {\n  return (\n    fetch(\n      options.url,\n      {\n        method: 'GET',\n        headers: modifyHeader(options),\n      },\n    )\n  );\n};\n\nexport const stdApiPUT = (options: any) => {\n  return (\n    options.data ?\n    fetch(\n      options.url,\n      {\n        method: 'PUT',\n        headers: modifyHeader(options),\n        body: JSON.stringify(options.data || {}),\n      },\n    )\n    :\n    fetch(\n      options.url,\n      {\n        method: 'PUT',\n        headers: modifyHeader(options),\n      },\n    )\n  );\n};\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faMapMarked, faPlusSquare, faHistory, faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport './index.scss';\n\nfunction TabBar() {\n  return(\n    <div className=\"container tabbar d-flex flex-row justify-content-between pt-12 pb-20 fill_w\">\n      <NavLink to=\"/\" activeClassName=\"tabbar__activeLink text-decoration-none ml-14\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-6 pb-4\" icon={faHome} color=\"\" />\n          <p>\n            Главная\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/map\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon pb-4\" icon={faMapMarked} color=\"\" />\n          <p>\n            Карта\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/offer\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-8 pb-4\" icon={faPlusSquare} color=\"#00BBFF\" />\n          <p className=\"tabbar__item--center\">\n            Создать\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/login\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-8 pb-4\" icon={faHistory} color=\"\" />\n          <p>\n            История\n          </p>\n        </div>\n      </NavLink>\n      <NavLink to=\"/cabinet\" activeClassName=\"tabbar__activeLink text-decoration-none\">\n        <div className=\"tabbar__item text-center pb-8 px-8\">\n          <FontAwesomeIcon className=\"tabbar__item--icon ml-8 pb-4\" icon={faUserCircle} color=\"\" />\n          <p>\n            Кабинет\n          </p>\n        </div>\n      </NavLink>\n\n    </div>\n  )\n}\n\nexport default TabBar;\n","import { API_URL } from 'src/constants/server';\nimport { stdApiGET, stdApiPOST } from 'src/store/defaultApi';\n\nconst id = sessionStorage.getItem('userId');\n\nconst itemsUrl = `${API_URL}api/offer`;\nconst createOfferUrl = `${API_URL}api/producer/${id}/offer`;\n\nexport const getItems = () => (\n  stdApiGET({ url: `${itemsUrl}` })\n);\n\nexport const createOffer = (data: any) => (\n  stdApiPOST({ data, url: `${createOfferUrl}` })\n);\n","import { defaultAction } from 'src/store/defaultAction';\nimport * as api from 'src/store/item/api';\nimport { GET_ITEMS, CREATE_OFFER } from 'src/store/item/types';\n\nexport const getItems = (callbacks?: any) => (dispatch: any, getState: any) => {\n  defaultAction(dispatch, getState, {\n    callbacks,\n    action: GET_ITEMS,\n    apiCall: () => {\n      return api.getItems();\n    },\n    onSuccess: (response: any) => ({ list: response }),\n    onError: (response: any) => ({ errorMessage: response.description }),\n  });\n};\n\nexport const createOffer = (data: any, callbacks?: any) => (dispatch?: any, getState?: any) => {\n  defaultAction(dispatch, getState, {\n    callbacks,\n    action: CREATE_OFFER,\n    apiCall: () => { return api.createOffer(data); },\n    onSuccess: (response: any) => {\n      window.location.replace('/');\n      return { user_token: response.Token };\n    },\n    onError: (response: any) => {\n      console.log('token-error');\n      response.Error === \"Couldn't find token\" && window.location.replace('/login');\n      return { user_token: response.Error };\n    },\n  });\n};\n\nexport default{\n  getItems,\n  createOffer,\n};\n"],"sourceRoot":""}